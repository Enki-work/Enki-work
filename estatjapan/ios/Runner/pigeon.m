// Autogenerated from Pigeon (v4.2.3), do not edit directly.
// See also: https://pub.dev/packages/pigeon
#import "pigeon.h"
#import <Flutter/Flutter.h>

#if !__has_feature(objc_arc)
#error File requires ARC to be enabled.
#endif

static NSDictionary<NSString *, id> *wrapResult(id result, FlutterError *error) {
  NSDictionary *errorDict = (NSDictionary *)[NSNull null];
  if (error) {
    errorDict = @{
        @"code": (error.code ?: [NSNull null]),
        @"message": (error.message ?: [NSNull null]),
        @"details": (error.details ?: [NSNull null]),
        };
  }
  return @{
      @"result": (result ?: [NSNull null]),
      @"error": errorDict,
      };
}
static id GetNullableObject(NSDictionary* dict, id key) {
  id result = dict[key];
  return (result == [NSNull null]) ? nil : result;
}
static id GetNullableObjectAtIndex(NSArray* array, NSInteger key) {
  id result = array[key];
  return (result == [NSNull null]) ? nil : result;
}


@interface PurchaseModel ()
+ (PurchaseModel *)fromMap:(NSDictionary *)dict;
+ (nullable PurchaseModel *)nullableFromMap:(NSDictionary *)dict;
- (NSDictionary *)toMap;
@end

@implementation PurchaseModel
+ (instancetype)makeWithIsPurchase:(NSNumber *)isPurchase
    isUsedTrial:(NSNumber *)isUsedTrial {
  PurchaseModel* pigeonResult = [[PurchaseModel alloc] init];
  pigeonResult.isPurchase = isPurchase;
  pigeonResult.isUsedTrial = isUsedTrial;
  return pigeonResult;
}
+ (PurchaseModel *)fromMap:(NSDictionary *)dict {
  PurchaseModel *pigeonResult = [[PurchaseModel alloc] init];
  pigeonResult.isPurchase = GetNullableObject(dict, @"isPurchase");
  NSAssert(pigeonResult.isPurchase != nil, @"");
  pigeonResult.isUsedTrial = GetNullableObject(dict, @"isUsedTrial");
  NSAssert(pigeonResult.isUsedTrial != nil, @"");
  return pigeonResult;
}
+ (nullable PurchaseModel *)nullableFromMap:(NSDictionary *)dict { return (dict) ? [PurchaseModel fromMap:dict] : nil; }
- (NSDictionary *)toMap {
  return @{
    @"isPurchase" : (self.isPurchase ?: [NSNull null]),
    @"isUsedTrial" : (self.isUsedTrial ?: [NSNull null]),
  };
}
@end

@interface HostPurchaseModelApiCodecReader : FlutterStandardReader
@end
@implementation HostPurchaseModelApiCodecReader
- (nullable id)readValueOfType:(UInt8)type 
{
  switch (type) {
    case 128:     
      return [PurchaseModel fromMap:[self readValue]];
    
    default:    
      return [super readValueOfType:type];
    
  }
}
@end

@interface HostPurchaseModelApiCodecWriter : FlutterStandardWriter
@end
@implementation HostPurchaseModelApiCodecWriter
- (void)writeValue:(id)value 
{
  if ([value isKindOfClass:[PurchaseModel class]]) {
    [self writeByte:128];
    [self writeValue:[value toMap]];
  } else 
{
    [super writeValue:value];
  }
}
@end

@interface HostPurchaseModelApiCodecReaderWriter : FlutterStandardReaderWriter
@end
@implementation HostPurchaseModelApiCodecReaderWriter
- (FlutterStandardWriter *)writerWithData:(NSMutableData *)data {
  return [[HostPurchaseModelApiCodecWriter alloc] initWithData:data];
}
- (FlutterStandardReader *)readerWithData:(NSData *)data {
  return [[HostPurchaseModelApiCodecReader alloc] initWithData:data];
}
@end


NSObject<FlutterMessageCodec> *HostPurchaseModelApiGetCodec() {
  static FlutterStandardMessageCodec *sSharedObject = nil;
  static dispatch_once_t sPred = 0;
  dispatch_once(&sPred, ^{
    HostPurchaseModelApiCodecReaderWriter *readerWriter = [[HostPurchaseModelApiCodecReaderWriter alloc] init];
    sSharedObject = [FlutterStandardMessageCodec codecWithReaderWriter:readerWriter];
  });
  return sSharedObject;
}

void HostPurchaseModelApiSetup(id<FlutterBinaryMessenger> binaryMessenger, NSObject<HostPurchaseModelApi> *api) {
  {
    FlutterBasicMessageChannel *channel =
      [[FlutterBasicMessageChannel alloc]
        initWithName:@"dev.flutter.pigeon.HostPurchaseModelApi.getPurchaseModel"
        binaryMessenger:binaryMessenger
        codec:HostPurchaseModelApiGetCodec()];
    if (api) {
      NSCAssert([api respondsToSelector:@selector(getPurchaseModelWithError:)], @"HostPurchaseModelApi api (%@) doesn't respond to @selector(getPurchaseModelWithError:)", api);
      [channel setMessageHandler:^(id _Nullable message, FlutterReply callback) {
        FlutterError *error;
        PurchaseModel *output = [api getPurchaseModelWithError:&error];
        callback(wrapResult(output, error));
      }];
    }
    else {
      [channel setMessageHandler:nil];
    }
  }
  {
    FlutterBasicMessageChannel *channel =
      [[FlutterBasicMessageChannel alloc]
        initWithName:@"dev.flutter.pigeon.HostPurchaseModelApi.getIsUsedTrial"
        binaryMessenger:binaryMessenger
        codec:HostPurchaseModelApiGetCodec()];
    if (api) {
      NSCAssert([api respondsToSelector:@selector(getIsUsedTrialWithError:)], @"HostPurchaseModelApi api (%@) doesn't respond to @selector(getIsUsedTrialWithError:)", api);
      [channel setMessageHandler:^(id _Nullable message, FlutterReply callback) {
        FlutterError *error;
        NSNumber *output = [api getIsUsedTrialWithError:&error];
        callback(wrapResult(output, error));
      }];
    }
    else {
      [channel setMessageHandler:nil];
    }
  }
  {
    FlutterBasicMessageChannel *channel =
      [[FlutterBasicMessageChannel alloc]
        initWithName:@"dev.flutter.pigeon.HostPurchaseModelApi.requestPurchaseModel"
        binaryMessenger:binaryMessenger
        codec:HostPurchaseModelApiGetCodec()];
    if (api) {
      NSCAssert([api respondsToSelector:@selector(requestPurchaseModelWithError:)], @"HostPurchaseModelApi api (%@) doesn't respond to @selector(requestPurchaseModelWithError:)", api);
      [channel setMessageHandler:^(id _Nullable message, FlutterReply callback) {
        FlutterError *error;
        NSNumber *output = [api requestPurchaseModelWithError:&error];
        callback(wrapResult(output, error));
      }];
    }
    else {
      [channel setMessageHandler:nil];
    }
  }
  {
    FlutterBasicMessageChannel *channel =
      [[FlutterBasicMessageChannel alloc]
        initWithName:@"dev.flutter.pigeon.HostPurchaseModelApi.restorePurchaseModel"
        binaryMessenger:binaryMessenger
        codec:HostPurchaseModelApiGetCodec()];
    if (api) {
      NSCAssert([api respondsToSelector:@selector(restorePurchaseModelWithError:)], @"HostPurchaseModelApi api (%@) doesn't respond to @selector(restorePurchaseModelWithError:)", api);
      [channel setMessageHandler:^(id _Nullable message, FlutterReply callback) {
        FlutterError *error;
        NSNumber *output = [api restorePurchaseModelWithError:&error];
        callback(wrapResult(output, error));
      }];
    }
    else {
      [channel setMessageHandler:nil];
    }
  }
}
@interface FlutterPurchaseModelApiCodecReader : FlutterStandardReader
@end
@implementation FlutterPurchaseModelApiCodecReader
- (nullable id)readValueOfType:(UInt8)type 
{
  switch (type) {
    case 128:     
      return [PurchaseModel fromMap:[self readValue]];
    
    default:    
      return [super readValueOfType:type];
    
  }
}
@end

@interface FlutterPurchaseModelApiCodecWriter : FlutterStandardWriter
@end
@implementation FlutterPurchaseModelApiCodecWriter
- (void)writeValue:(id)value 
{
  if ([value isKindOfClass:[PurchaseModel class]]) {
    [self writeByte:128];
    [self writeValue:[value toMap]];
  } else 
{
    [super writeValue:value];
  }
}
@end

@interface FlutterPurchaseModelApiCodecReaderWriter : FlutterStandardReaderWriter
@end
@implementation FlutterPurchaseModelApiCodecReaderWriter
- (FlutterStandardWriter *)writerWithData:(NSMutableData *)data {
  return [[FlutterPurchaseModelApiCodecWriter alloc] initWithData:data];
}
- (FlutterStandardReader *)readerWithData:(NSData *)data {
  return [[FlutterPurchaseModelApiCodecReader alloc] initWithData:data];
}
@end


NSObject<FlutterMessageCodec> *FlutterPurchaseModelApiGetCodec() {
  static FlutterStandardMessageCodec *sSharedObject = nil;
  static dispatch_once_t sPred = 0;
  dispatch_once(&sPred, ^{
    FlutterPurchaseModelApiCodecReaderWriter *readerWriter = [[FlutterPurchaseModelApiCodecReaderWriter alloc] init];
    sSharedObject = [FlutterStandardMessageCodec codecWithReaderWriter:readerWriter];
  });
  return sSharedObject;
}

@interface FlutterPurchaseModelApi ()
@property (nonatomic, strong) NSObject<FlutterBinaryMessenger> *binaryMessenger;
@end

@implementation FlutterPurchaseModelApi

- (instancetype)initWithBinaryMessenger:(NSObject<FlutterBinaryMessenger> *)binaryMessenger {
  self = [super init];
  if (self) {
    _binaryMessenger = binaryMessenger;
  }
  return self;
}
- (void)sendPurchaseModelPurchaseModel:(PurchaseModel *)arg_purchaseModel completion:(void(^)(NSError *_Nullable))completion {
  FlutterBasicMessageChannel *channel =
    [FlutterBasicMessageChannel
      messageChannelWithName:@"dev.flutter.pigeon.FlutterPurchaseModelApi.sendPurchaseModel"
      binaryMessenger:self.binaryMessenger
      codec:FlutterPurchaseModelApiGetCodec()      ];  [channel sendMessage:@[arg_purchaseModel ?: [NSNull null]] reply:^(id reply) {
    completion(nil);
  }];
}
@end
